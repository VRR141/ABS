CREATE TABLE IF NOT EXISTS categories
(
    id            int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name varchar(100)
);

CREATE TABLE IF NOT EXISTS items
(
    id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_name   varchar(100),
    category_id int REFERENCES categories (id)
);

CREATE TABLE IF NOT EXISTS attribute
(
    id             int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    attribute_name varchar(100)
);

CREATE TABLE IF NOT EXISTS values
(
    id           int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    value_name   varchar(100),
    attribute_id int REFERENCES attribute (id)
);


CREATE TABLE IF NOT EXISTS articles
(
    id     int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    price  int,
    amount int
);
CREATE TABLE IF NOT EXISTS item_values
(
    id         int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id    int REFERENCES items (id),
    value_id   int REFERENCES values (id),
    article_id int REFERENCES articles (id)
);

CREATE TABLE IF NOT EXISTS pirates
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(55) not null
);

CREATE TABLE IF NOT EXISTS roles
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(35) not null
);

CREATE TABLE IF NOT EXISTS pirates_roles
(
    pirate_id int not null,
    role_id   int not null,
    constraint pirate
        foreign key (pirate_id) references pirates (id),
    constraint role
        foreign key (role_id) references roles (id)
);

CREATE TABLE IF NOT EXISTS credentials
(
    id              int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login           varchar(14) not null,
    password        varchar(14) not null,
    pirate_id       int         null,
    activity_status boolean     not null,
    constraint credentials_pirate
        foreign key (pirate_id) references pirates (id)
);

CREATE TABLE IF NOT EXISTS status
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(14) not null
);

CREATE TABLE IF NOT EXISTS orders
(
    id             int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_date     date,
    completed_date date,
    pirate_id      int not null references pirates (id),
    status_id      int not null references status (id)
);

CREATE TABLE IF NOT EXISTS articles_orders
(
    id         int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    article_id int REFERENCES articles (id),
    order_id   int REFERENCES orders (id),
    amount     int
);