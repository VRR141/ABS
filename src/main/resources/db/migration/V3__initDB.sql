CREATE TABLE IF NOT EXISTS pirates
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(55) NOT NULL
);

CREATE TABLE IF NOT EXISTS roles
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(15) NOT NULL
);

CREATE TABLE IF NOT EXISTS pirates_roles
(
    pirate_id bigint REFERENCES pirates (id),
    role_id   bigint REFERENCES roles (id),
    CONSTRAINT pirates FOREIGN KEY (pirate_id) REFERENCES pirates (id),
    CONSTRAINT roles FOREIGN KEY (role_id) REFERENCES roles (id)
);

CREATE TABLE IF NOT EXISTS orders
(
    id             bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pirate_id      bigint NOT NULL REFERENCES pirates (id),
    order_date     date,
    completed_date date
);

CREATE TABLE IF NOT EXISTS statuses
(
    id       bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id bigint      NOT NULL REFERENCES orders (id),
    name     varchar(15) NOT NULL
);

CREATE TABLE IF NOT EXISTS articles
(
    item_id bigint REFERENCES items (id) PRIMARY KEY,
    price   bigint NOT NULL,
    amount  int
);

CREATE TABLE IF NOT EXISTS articles_orders
(
    order_id   bigint REFERENCES orders (id),
    article_id bigint REFERENCES articles (item_id),
    CONSTRAINT orders FOREIGN KEY (order_id) REFERENCES orders (id),
    CONSTRAINT articles FOREIGN KEY (article_id) REFERENCES articles (item_id)
);

CREATE TABLE IF NOT EXISTS items
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(35) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories
(
    id      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id bigint REFERENCES items (id),
    name    varchar(35) NOT NULL
);

CREATE TABLE IF NOT EXISTS attributes
(
    id      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    varchar(35) NOT NULL
);

CREATE TABLE IF NOT EXISTS values
(
    id           int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    attribute_id int REFERENCES attributes (id),
    name         varchar(35)
);

CREATE TABLE IF NOT EXISTS items_attributes
(
    item_id      bigint REFERENCES items (id),
    attribute_id bigint REFERENCES attributes (id),
    CONSTRAINT items FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT attributes FOREIGN KEY (attribute_id) REFERENCES attributes (id)
);